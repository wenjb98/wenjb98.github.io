<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>算法—简单查找</title>
    <link href="/2020/09/21/%E7%AE%97%E6%B3%95%E2%80%94%E7%AE%80%E5%8D%95%E6%9F%A5%E6%89%BE/"/>
    <url>/2020/09/21/%E7%AE%97%E6%B3%95%E2%80%94%E7%AE%80%E5%8D%95%E6%9F%A5%E6%89%BE/</url>
    
    <content type="html"><![CDATA[<h5 id="1-1-算法描述："><a href="#1-1-算法描述：" class="headerlink" title="1.1 算法描述："></a>1.1 算法描述：</h5><ul><li>将数组中的元素逐个和待查找数据对比</li><li>输入：数组, 待查找数据</li><li>输出：若数据中包含和待查找数据相同的元素 则返回次元素在数组中的索引，否则返回-1</li></ul><h5 id="1-2-第一种简单查找"><a href="#1-2-第一种简单查找" class="headerlink" title="1.2 第一种简单查找"></a>1.2 第一种简单查找</h5><p>​    </p><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">case1</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr , <span class="hljs-keyword">int</span> x)</span></span>&#123;       <span class="hljs-keyword">int</span> pos = -<span class="hljs-number">1</span>;       <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span> ; i&lt;arr.length ;i++ )           <span class="hljs-keyword">if</span>(arr[i] == x)               pos = i;       <span class="hljs-keyword">return</span> pos;   &#125;</code></pre><h5 id="1-3-第二种简单查找"><a href="#1-3-第二种简单查找" class="headerlink" title="1.3 第二种简单查找"></a>1.3 第二种简单查找</h5><p>​    </p><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">case2</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr ,<span class="hljs-keyword">int</span> x)</span></span>&#123;       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;           <span class="hljs-keyword">if</span>(arr[i]==x)               <span class="hljs-keyword">return</span> i;       &#125;       <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;   &#125;</code></pre><h5 id="1-4-第三种简单查找"><a href="#1-4-第三种简单查找" class="headerlink" title="1.4 第三种简单查找"></a>1.4 第三种简单查找</h5><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">case3</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr,<span class="hljs-keyword">int</span> x)</span></span>&#123;        <span class="hljs-keyword">int</span> temp = arr[arr.length-<span class="hljs-number">1</span>];        arr[arr.length-<span class="hljs-number">1</span>] = x;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;            <span class="hljs-keyword">if</span> (arr[i]==x)&#123;                arr[arr.length-<span class="hljs-number">1</span>] = temp;                <span class="hljs-keyword">if</span>(i&lt;arr.length-<span class="hljs-number">1</span> || temp == x )&#123;                    <span class="hljs-keyword">return</span> i;                &#125;            &#125;        &#125;        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;    &#125;</code></pre><h5 id="1-5-测试"><a href="#1-5-测试" class="headerlink" title="1.5 测试"></a>1.5 测试</h5><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;        <span class="hljs-keyword">int</span>[] arr = &#123;<span class="hljs-number">34</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">67</span>,<span class="hljs-number">43</span>,<span class="hljs-number">78</span>,<span class="hljs-number">36</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;;        <span class="hljs-comment">/**</span><span class="hljs-comment">         *  case 1 和 case2的区别</span><span class="hljs-comment">         *      相同：case1 和 case2 都是将数组中的元素拿出逐个与x比较</span><span class="hljs-comment">         *      不同: 1 返回索引的时机不同 ,在case1中若找到与x相同的元素循环还会继续下去 ，直到比完所          *           有元素</span><span class="hljs-comment">         *      case2在索引到目标元素后就会直接返回下标</span><span class="hljs-comment">         *           2 找到目标元素的位置不同 case1中可找出x最后一次出现索引，而case2会找到目标元素 *第一次出现的索引。</span><span class="hljs-comment">         *</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">int</span> case1 = case1(arr, <span class="hljs-number">5</span>);  <span class="hljs-comment">//10</span>        <span class="hljs-keyword">int</span> case2 = case2(arr, <span class="hljs-number">5</span>); <span class="hljs-comment">//1</span>        System.out.println(case1);        System.out.println(case2);        <span class="hljs-comment">/**</span><span class="hljs-comment">         *   case3 算法目的与case2相同也是找出目标元素第一次出现的位置</span><span class="hljs-comment">         *</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">int</span> case3 = case3(arr, <span class="hljs-number">5</span>);  <span class="hljs-comment">//1</span>        System.out.println(case3);    &#125;</code></pre><h5 id="1-6-总结"><a href="#1-6-总结" class="headerlink" title="1.6 总结"></a>1.6 总结</h5><ul><li><p>若是需要查找目标元素最后一次出现的位置，使用第一张算法</p></li><li><p>若是查找目标元素第一次一次出现的位置，使用二三算法</p></li><li><p>若是需要只需找出数组中是否含有目标元素 二三算法效率更高 </p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/09/17/hello-world/"/>
    <url>/2020/09/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
